/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package datastructure;

import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;

public class LibraryTest {
    Library.LinkedList list = new Library.LinkedList();

    @Before
    public void initializeForTest() {
        list.insert(1);
        list.insert(4);
        list.insert(7);
        list.insert(13);
        list.insert(17);
        list.insert(19);
        list.insert(23);
        list.insert(29);
        list.insert(37);
        list.insert(59);
        list.insert(60);
    }



    //Check to see if empty linked list gets created
    @Test
    public void emptyList() {
        Library.LinkedList emptyList = new Library.LinkedList();
        assertEquals("HEAD -> NULL", emptyList.toString());
    }

    //Check to see if could be inserted into linked list
    @Test public void checkInsert1() {
        list.insert(10);
        assertEquals("HEAD -> 10 -> 60 -> 59 -> 37 -> 29 -> 23 -> 19 -> 17 -> 13 -> 7 -> 4 -> 1 -> NULL", list.toString());
    }

    @Test public void checkInsert2() {
        list.insert(10);
        list.insert(20);
        list.insert(30);
        list.insert(40);

        assertEquals("HEAD -> 40 -> 30 -> 20 -> 10 -> 60 -> 59 -> 37 -> 29 -> 23 -> 19 -> 17 -> 13 -> 7 -> 4 -> 1 -> NULL", list.toString());
    }

    @Test public void checkIncludes() {
        assertEquals(true, list.includes(17));
        assertEquals(false, list.includes(30));
    }

    @Test public void checkToString()
    {
        assertEquals("HEAD -> 60 -> 59 -> 37 -> 29 -> 23 -> 19 -> 17 -> 13 -> 7 -> 4 -> 1 -> NULL", list.toString());
    }

    //Challenge 06
    @Test public void addAtEndTest() {
        list.append(70);
        assertEquals("HEAD -> 60 -> 59 -> 37 -> 29 -> 23 -> 19 -> 17 -> 13 -> 7 -> 4 -> 1 -> 70 -> NULL", list.toString());

    }

    @Test public void addMultipleAtEndTest() {
        list.append(71);
        list.append(72);
        list.append(73);
        list.append(74);
        list.append(75);
        list.append(76);
        list.append(77);
        assertEquals("HEAD -> 60 -> 59 -> 37 -> 29 -> 23 -> 19 -> 17 -> 13 -> 7 -> 4 -> 1 -> 71 -> 72 -> 73 -> 74 -> 75 -> 76 -> 77 -> NULL", list.toString());

    }

    @Test public void addInBeforeMiddleTest() {
        list.insertBefore(19,20);
        assertEquals("HEAD -> 60 -> 59 -> 37 -> 29 -> 23 -> 20 -> 19 -> 17 -> 13 -> 7 -> 4 -> 1 -> NULL", list.toString());
    }

    @Test public void addInBeforeFirstTest() {
        list.insertBefore(60,20);
        assertEquals("HEAD -> 20 -> 60 -> 59 -> 37 -> 29 -> 23 -> 19 -> 17 -> 13 -> 7 -> 4 -> 1 -> NULL", list.toString());
    }

    @Test public void addInAfterMiddleTest()  {
        list.insertAfter(19, 100);
        assertEquals("HEAD -> 60 -> 59 -> 37 -> 29 -> 23 -> 19 -> 100 -> 17 -> 13 -> 7 -> 4 -> 1 -> NULL", list.toString());
    }

    @Test public void addInAfterLastTest() {
        list.insertAfter(1, 100);
        assertEquals("HEAD -> 60 -> 59 -> 37 -> 29 -> 23 -> 19 -> 17 -> 13 -> 7 -> 4 -> 1 -> 100 -> NULL", list.toString());
    }

}
