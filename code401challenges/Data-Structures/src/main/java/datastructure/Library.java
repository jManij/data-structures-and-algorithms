/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package datastructure;

public class Library {
    public static class LinkedList {
        Node head; // Head of the linked list

        LinkedList() {
            this.head = null;
        }

        public class Node {
            int value;  // The value for the Node
            Node next;  // Reference to the next node in the list


            //Constructor
            Node(int data) {
                value = data; //Assign the value that is passed
                next = null;  // Point next node null

            }

        }

        public void insert (int value) {
            Node newNode = new Node(value);

            if (head == null) {
                head = newNode;  // new node becomes the head
            } else {
                Node temp = head;
                head = newNode;
                newNode.next = temp;
            }

        }


        public boolean includes (int value) {
            Node temp = head;

            while(temp != null) {
                if(temp.value == value) {
                    return true;
                }
                temp = temp.next;

            }
            return false;

        }


        public String toString() {
            Node temp = head;
            String returnString = "";
            while (temp != null) {
                returnString += Integer.toString(temp.value) + " ";
                temp = temp.next;
            }
            if (returnString.isEmpty()) {
                returnString = "{}";
            }
            return returnString;
        }
    }

    public static void main (String[] args) {

        LinkedList list = new LinkedList();
        System.out.println(list.toString());
        list.insert(5);
        list.insert(6);
        list.insert(7);
        list.insert(8);
        list.insert(11);
        list.insert(13);

        System.out.println(list.toString());
        System.out.print(list.includes(111));











    }
}
