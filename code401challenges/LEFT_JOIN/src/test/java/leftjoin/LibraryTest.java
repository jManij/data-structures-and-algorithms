/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package leftjoin;

import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;

import java.util.HashMap;
import static org.junit.Assert.*;


public class LibraryTest {
    HashMap<String, String> leftMap = new HashMap<>();
    HashMap<String, String> rightMap = new HashMap<>();

    @Before
    public void init() {
        leftMap.put("fond", "enamored");
        leftMap.put("wrath", "anger");
        leftMap.put("diligent", "employed");
        leftMap.put("outfil", "garb");
        leftMap.put("guide", "usher");


        rightMap.put("fond", "averse");
        rightMap.put("wrath", "delight");
        rightMap.put("diligent", "idle");
        rightMap.put("guide", "follow");
        rightMap.put("flow", "jam");

    }

    @Test
    public void test_left_join() {
        Library test = new Library();
        HashMap<String, String[]> results = test.left_join(leftMap, rightMap);

        /**
         * Assert the object received is not null
         */
        assertNotNull("The method should return a valid object",results);


        /**
         * Sanity Check 1
         */
        assertEquals("The method should return a concatenated String of left join logic",
                "[\n" +
                "[ 'diligent','employed','idle'],\n" +
                "[ 'wrath','anger','delight'],\n" +
                "[ 'outfil','garb','null'],\n" +
                "[ 'guide','usher','follow'],\n" +
                "[ 'fond','enamored','averse'],\n" +
                "]\n", test.readableString(results));

        /**
         * Add more values to the maps and re-run the test
         * Sanity Check 2
         */

        leftMap.put("new1", "new1");
        leftMap.put("new2", "new2");
        leftMap.put("new3", "new3");
        leftMap.put("new4", "new4");

        rightMap.put("new1", "old1");
        rightMap.put("new2", "old2");
        rightMap.put("notnew3", "old1");
        rightMap.put("notnew4", "old1");

        results = test.left_join(leftMap, rightMap);

        assertEquals("The method should return a concatenated String of left join logic",
                "[\n" +
                "[ 'new3','new3','null'],\n" +
                "[ 'diligent','employed','idle'],\n" +
                "[ 'new2','new2','old2'],\n" +
                "[ 'new1','new1','old1'],\n" +
                "[ 'new4','new4','null'],\n" +
                "[ 'wrath','anger','delight'],\n" +
                "[ 'outfil','garb','null'],\n" +
                "[ 'guide','usher','follow'],\n" +
                "[ 'fond','enamored','averse'],\n" +
                "]\n", test.readableString(results));

    }

}
